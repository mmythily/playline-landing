{"version":3,"sources":["containers/PlayersContainer.js","components/MainDashboard.js","components/Navigat.js","App.js","reportWebVitals.js","index.js"],"names":["PlayersContainer","useState","players","playersData","setPlayersData","isLoading","setIsLoading","useEffect","id","map","last_name","headshot","points","src","alt","MainDashboard","role","className","Navigat","App","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6lCAIe,SAASA,IAAmB,IAAD,EACFC,mBAASC,KADP,mBACjCC,EADiC,KACpBC,EADoB,OAENH,oBAAS,GAFH,mBAEjCI,EAFiC,KAEtBC,EAFsB,KAUxC,OANAC,qBAAW,WACTD,GAAa,GACbF,EAAeF,KACfI,GAAa,KACZ,IAGD,mCACID,EACA,6CAEF,oBAAIG,GAAG,oBAAP,SACGL,EAAYM,KAAI,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,OAAvB,OACf,qBAAIJ,GAAG,cAAP,UACE,qBAAKA,GAAG,aAAaK,IAAKF,EAAUG,IAAKJ,IACzC,mBAAGF,GAAG,kBAAN,SAAyBE,IACzB,mBAAGF,GAAG,gBAAN,SAAuBI,IACvB,mBAAGJ,GAAG,kBAAN,qBAJwBE,UChBrB,SAASK,IACtB,OACE,uBAAMP,GAAG,iBAAiBQ,KAAK,OAA/B,UACI,qBAAKR,GAAG,gBAAgBK,IAAI,+BAA+BC,IAAI,sBAC/D,sBAAKN,GAAG,iBAAR,UACE,oBAAIA,GAAG,eAAP,mCACA,mBAAGA,GAAG,gBAAN,kDACA,0BAEF,mBAAGA,GAAG,kBAAN,6FAEA,cAAC,EAAD,IAEA,sBAAKA,GAAG,oBAAR,UACE,sBAAKS,UAAU,wBAAf,UACE,qBAAKA,UAAU,qBAAqBJ,IAAI,gCAAgCC,IAAI,mBAC5E,gDAEF,sBAAKG,UAAU,wBAAf,UACE,qBAAKA,UAAU,qBAAqBJ,IAAI,gCAAgCC,IAAI,iBAC5E,iDAIJ,sBAAKN,GAAG,qBAAR,UACE,mBAAGA,GAAG,eAAN,8BACA,qBAAKK,IAAI,8BAA8BC,IAAI,wBAC3C,qBAAKD,IAAI,kCAAkCC,IAAI,kC,MC7B1C,SAASI,IACtB,OACE,qBAAKF,KAAK,aAAV,SACE,qBAAIR,GAAG,YAAP,UACE,uCACA,2CACA,yCACA,0CACA,mDACA,yCACA,4CCQOW,MAhBf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,iCACE,qBACET,GAAG,oBACHK,IAAI,6BACJC,IAAI,6BACJM,MAAM,YAEV,cAAC,EAAD,IACA,cAAC,EAAD,QCJSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac7a594a.chunk.js","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport './PlayersContainer.css'\nimport {players} from '../playline-test.json';\n\nexport default function PlayersContainer(){\n  const [playersData, setPlayersData] = useState(players)\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect (()=>{\n    setIsLoading(true)\n    setPlayersData(players)\n    setIsLoading(false)\n  }, [])\n\n  return(\n    <>\n      { isLoading ? (\n        <div>Loading...</div>\n      ):( \n      <ul id='players-container'>\n        {playersData.map(({last_name, headshot, points})=>(\n          <li id='player-list' key={last_name}>\n            <img id='player-img' src={headshot} alt={last_name} />\n            <p id='player-name-pts'>{last_name}</p>\n            <p id='player-points'>{points}</p>\n            <p id='player-name-pts'> PTS </p>\n          </li>\n        \n        ))}\n      </ul>)\n    }\n    </>\n  )\n}","import React from 'react'\nimport './MainDashboard.css'\n\nimport PlayersContainer from '../containers/PlayersContainer'\n\nexport default function MainDashboard() {\n  return (\n    <main id='main-container' role='main'>\n        <img id='progress-logo' src=\"../assets/icons/progress.svg\" alt=\"Progress Bar Icon\"/>\n        <div id='time-container'>\n          <h1 id='playline-set'>Your Playline is set!</h1>\n          <p id='playline-time'>Come Back @ 7:30pm to track it live!</p>\n          <hr/>\n        </div>\n        <p id='playline-protip'>Pro Tip: You can manage your PlayLine's until they go live in the Upcoming area</p>\n        \n        <PlayersContainer />\n\n        <div id='buttons-container'>\n          <div className='notify-deposit-button'>\n            <img className='notify-deposit-img' src=\"../assets/icons/notify-me.svg\" alt=\"Notify Me Icon\"/> \n            <span>Notify Me</span>\n          </div>\n          <div className='notify-deposit-button'>\n            <img className='notify-deposit-img' src=\"../assets/icons/money-bag.svg\" alt=\"Deposit Icon\"/>\n            <span>Deposit</span>\n          </div>\n        </div>\n\n        <div id='download-container'>\n          <p id='download-app'>Download the app</p>\n          <img src=\"../assets/icons/ios-app.svg\" alt=\"Go to IOS App Store\"/>\n          <img src=\"../assets/icons/google-play.svg\" alt=\"Go to Google Play Store\"/>\n        </div>\n      </main>\n  )\n}","import React from 'react'\nimport './Navigat.css'\n\nexport default function Navigat(){\n  return (\n    <nav role='navigation'>\n      <ul id='nav-links'>\n        <li>About</li>\n        <li>PLB Bonus</li>\n        <li>Contact</li>\n        <li>Security</li>\n        <li>Responsibile Play</li>\n        <li>Privacy</li>\n        <li>Terms</li>\n      </ul>\n    </nav>\n  )\n}","import './App.css';\n\nimport MainDashboard from './components/MainDashboard';\nimport Navigat from './components/Navigat'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <img \n          id='sports-lotto-logo' \n          src='../assets/logo/logo@2x.png' \n          alt='PlayLine Sports Lotto Logo'\n          width='300px'/>\n      </header>\n      <MainDashboard />\n      <Navigat />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}